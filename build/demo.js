/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((module) => {

module.exports = JSON.parse('[{"open":140.12,"high":141.03,"low":139.5,"close":139.68,"volume":25446000,"date":"2019-10-11T00:00:00.000Z"},{"open":139.69,"high":140.29,"low":139.52,"close":139.55,"volume":13304300,"date":"2019-10-14T00:00:00.000Z"},{"open":140.06,"high":141.79,"low":139.81,"close":141.57,"volume":19695700,"date":"2019-10-15T00:00:00.000Z"},{"open":140.79,"high":140.99,"low":139.53,"close":140.41,"volume":20751600,"date":"2019-10-16T00:00:00.000Z"},{"open":140.95,"high":141.42,"low":139.02,"close":139.69,"volume":21460600,"date":"2019-10-17T00:00:00.000Z"},{"open":139.76,"high":140,"low":136.56,"close":137.41,"volume":32273500,"date":"2019-10-18T00:00:00.000Z"},{"open":138.45,"high":138.5,"low":137.01,"close":138.43,"volume":20078200,"date":"2019-10-21T00:00:00.000Z"},{"open":138.97,"high":140.01,"low":136.26,"close":136.37,"volume":27431000,"date":"2019-10-22T00:00:00.000Z"},{"open":136.88,"high":137.45,"low":135.61,"close":137.24,"volume":29844600,"date":"2019-10-23T00:00:00.000Z"},{"open":139.39,"high":140.42,"low":138.67,"close":139.94,"volume":37029300,"date":"2019-10-24T00:00:00.000Z"},{"open":139.34,"high":141.14,"low":139.2,"close":140.73,"volume":25959700,"date":"2019-10-25T00:00:00.000Z"},{"open":144.4,"high":145.67,"low":143.51,"close":144.19,"volume":35280100,"date":"2019-10-28T00:00:00.000Z"},{"open":144.08,"high":144.5,"low":142.65,"close":142.83,"volume":20589500,"date":"2019-10-29T00:00:00.000Z"},{"open":143.52,"high":145,"low":142.79,"close":144.61,"volume":18496600,"date":"2019-10-30T00:00:00.000Z"},{"open":144.9,"high":144.93,"low":142.99,"close":143.37,"volume":24605100,"date":"2019-10-31T00:00:00.000Z"},{"open":144.26,"high":144.42,"low":142.97,"close":143.72,"volume":33128400,"date":"2019-11-01T00:00:00.000Z"},{"open":144.83,"high":145,"low":144.16,"close":144.55,"volume":16912000,"date":"2019-11-04T00:00:00.000Z"},{"open":144.97,"high":145.02,"low":143.91,"close":144.46,"volume":18250200,"date":"2019-11-05T00:00:00.000Z"},{"open":144.37,"high":144.52,"low":143.2,"close":144.06,"volume":16575800,"date":"2019-11-06T00:00:00.000Z"},{"open":143.84,"high":144.88,"low":143.77,"close":144.26,"volume":17786700,"date":"2019-11-07T00:00:00.000Z"},{"open":143.98,"high":145.99,"low":143.76,"close":145.96,"volume":16732700,"date":"2019-11-08T00:00:00.000Z"},{"open":145.34,"high":146.42,"low":144.73,"close":146.11,"volume":14362600,"date":"2019-11-11T00:00:00.000Z"},{"open":146.28,"high":147.57,"low":146.06,"close":147.07,"volume":18641600,"date":"2019-11-12T00:00:00.000Z"},{"open":146.74,"high":147.46,"low":146.28,"close":147.31,"volume":16919200,"date":"2019-11-13T00:00:00.000Z"},{"open":147.02,"high":148.41,"low":147,"close":148.06,"volume":19729800,"date":"2019-11-14T00:00:00.000Z"},{"open":148.93,"high":149.99,"low":148.27,"close":149.97,"volume":23485700,"date":"2019-11-15T00:00:00.000Z"},{"open":150.07,"high":150.55,"low":148.98,"close":150.34,"volume":21534000,"date":"2019-11-18T00:00:00.000Z"},{"open":150.88,"high":151.33,"low":150.2,"close":150.39,"volume":23935700,"date":"2019-11-19T00:00:00.000Z"},{"open":150.31,"high":150.84,"low":148.46,"close":149.62,"volume":25696800,"date":"2019-11-20T00:00:00.000Z"},{"open":149.4,"high":149.8,"low":148.5,"close":149.48,"volume":18576100,"date":"2019-11-21T00:00:00.000Z"},{"open":150.07,"high":150.3,"low":148.82,"close":149.59,"volume":15901800,"date":"2019-11-22T00:00:00.000Z"},{"open":150,"high":151.35,"low":149.92,"close":151.23,"volume":22420900,"date":"2019-11-25T00:00:00.000Z"},{"open":151.36,"high":152.42,"low":151.32,"close":152.03,"volume":24620100,"date":"2019-11-26T00:00:00.000Z"},{"open":152.33,"high":152.5,"low":151.52,"close":152.32,"volume":15184400,"date":"2019-11-27T00:00:00.000Z"},{"open":152.1,"high":152.3,"low":151.28,"close":151.38,"volume":11977300,"date":"2019-11-29T00:00:00.000Z"},{"open":151.81,"high":151.83,"low":148.32,"close":149.55,"volume":27418400,"date":"2019-12-02T00:00:00.000Z"},{"open":147.49,"high":149.43,"low":146.65,"close":149.31,"volume":24066000,"date":"2019-12-03T00:00:00.000Z"},{"open":150.14,"high":150.18,"low":149.2,"close":149.85,"volume":17574700,"date":"2019-12-04T00:00:00.000Z"},{"open":150.05,"high":150.32,"low":149.48,"close":149.93,"volume":17869100,"date":"2019-12-05T00:00:00.000Z"},{"open":150.99,"high":151.87,"low":150.27,"close":151.75,"volume":16403500,"date":"2019-12-06T00:00:00.000Z"},{"open":151.07,"high":152.21,"low":150.91,"close":151.36,"volume":16687400,"date":"2019-12-09T00:00:00.000Z"},{"open":151.29,"high":151.89,"low":150.76,"close":151.13,"volume":16476100,"date":"2019-12-10T00:00:00.000Z"},{"open":151.54,"high":151.87,"low":150.33,"close":151.7,"volume":18856600,"date":"2019-12-11T00:00:00.000Z"},{"open":151.65,"high":153.44,"low":151.02,"close":153.24,"volume":24612100,"date":"2019-12-12T00:00:00.000Z"},{"open":153,"high":154.89,"low":152.83,"close":154.53,"volume":23845400,"date":"2019-12-13T00:00:00.000Z"},{"open":155.11,"high":155.9,"low":154.82,"close":155.53,"volume":24144200,"date":"2019-12-16T00:00:00.000Z"},{"open":155.45,"high":155.71,"low":154.45,"close":154.69,"volume":25425600,"date":"2019-12-17T00:00:00.000Z"},{"open":154.3,"high":155.48,"low":154.18,"close":154.37,"volume":24129200,"date":"2019-12-18T00:00:00.000Z"},{"open":154,"high":155.77,"low":153.75,"close":155.71,"volume":24958900,"date":"2019-12-19T00:00:00.000Z"},{"open":157.35,"high":158.49,"low":156.29,"close":157.41,"volume":53477500,"date":"2019-12-20T00:00:00.000Z"},{"open":158.12,"high":158.12,"low":157.27,"close":157.41,"volume":17718200,"date":"2019-12-23T00:00:00.000Z"},{"open":157.48,"high":157.71,"low":157.12,"close":157.38,"volume":8989200,"date":"2019-12-24T00:00:00.000Z"},{"open":157.56,"high":158.73,"low":157.4,"close":158.67,"volume":14520600,"date":"2019-12-26T00:00:00.000Z"},{"open":159.45,"high":159.55,"low":158.22,"close":158.96,"volume":18412800,"date":"2019-12-27T00:00:00.000Z"},{"open":158.99,"high":159.02,"low":156.73,"close":157.59,"volume":16348400,"date":"2019-12-30T00:00:00.000Z"},{"open":156.77,"high":157.77,"low":156.45,"close":157.7,"volume":18369400,"date":"2019-12-31T00:00:00.000Z"},{"open":158.78,"high":160.73,"low":158.33,"close":160.62,"volume":22622100,"date":"2020-01-02T00:00:00.000Z"},{"open":158.32,"high":159.95,"low":158.06,"close":158.62,"volume":21116200,"date":"2020-01-03T00:00:00.000Z"},{"open":157.08,"high":159.1,"low":156.51,"close":159.03,"volume":20813700,"date":"2020-01-06T00:00:00.000Z"},{"open":159.32,"high":159.67,"low":157.32,"close":157.58,"volume":21634100,"date":"2020-01-07T00:00:00.000Z"},{"open":158.93,"high":160.8,"low":157.95,"close":160.09,"volume":27746500,"date":"2020-01-08T00:00:00.000Z"},{"open":161.84,"high":162.22,"low":161.03,"close":162.09,"volume":21385000,"date":"2020-01-09T00:00:00.000Z"},{"open":162.82,"high":163.22,"low":161.18,"close":161.34,"volume":20725900,"date":"2020-01-10T00:00:00.000Z"},{"open":161.76,"high":163.31,"low":161.26,"close":163.28,"volume":21626500,"date":"2020-01-13T00:00:00.000Z"},{"open":163.39,"high":163.6,"low":161.72,"close":162.13,"volume":23477400,"date":"2020-01-14T00:00:00.000Z"},{"open":162.62,"high":163.94,"low":162.57,"close":163.18,"volume":21391800,"date":"2020-01-15T00:00:00.000Z"},{"open":164.35,"high":166.24,"low":164.03,"close":166.17,"volume":23865400,"date":"2020-01-16T00:00:00.000Z"},{"open":167.42,"high":167.47,"low":165.43,"close":167.1,"volume":34371700,"date":"2020-01-17T00:00:00.000Z"},{"open":166.68,"high":168.19,"low":166.43,"close":166.5,"volume":29517200,"date":"2020-01-21T00:00:00.000Z"},{"open":167.4,"high":167.49,"low":165.68,"close":165.7,"volume":24138800,"date":"2020-01-22T00:00:00.000Z"},{"open":166.19,"high":166.8,"low":165.27,"close":166.72,"volume":19680800,"date":"2020-01-23T00:00:00.000Z"},{"open":167.51,"high":167.53,"low":164.45,"close":165.04,"volume":24918100,"date":"2020-01-24T00:00:00.000Z"},{"open":161.15,"high":163.38,"low":160.2,"close":162.28,"volume":32078100,"date":"2020-01-27T00:00:00.000Z"},{"open":163.78,"high":165.76,"low":163.07,"close":165.46,"volume":24899900,"date":"2020-01-28T00:00:00.000Z"},{"open":167.84,"high":168.75,"low":165.69,"close":168.04,"volume":34754500,"date":"2020-01-29T00:00:00.000Z"},{"open":174.05,"high":174.05,"low":170.79,"close":172.78,"volume":51597500,"date":"2020-01-30T00:00:00.000Z"},{"open":172.21,"high":172.4,"low":169.58,"close":170.23,"volume":36142700,"date":"2020-01-31T00:00:00.000Z"},{"open":170.43,"high":174.5,"low":170.4,"close":174.38,"volume":30149100,"date":"2020-02-03T00:00:00.000Z"},{"open":177.14,"high":180.64,"low":176.31,"close":180.12,"volume":36433300,"date":"2020-02-04T00:00:00.000Z"},{"open":184.03,"high":184.2,"low":178.41,"close":179.9,"volume":39186300,"date":"2020-02-05T00:00:00.000Z"},{"open":180.97,"high":183.82,"low":180.06,"close":183.63,"volume":27751400,"date":"2020-02-06T00:00:00.000Z"},{"open":182.85,"high":185.63,"low":182.48,"close":183.89,"volume":33529100,"date":"2020-02-07T00:00:00.000Z"},{"open":183.58,"high":188.84,"low":183.25,"close":188.7,"volume":35844300,"date":"2020-02-10T00:00:00.000Z"},{"open":190.65,"high":190.7,"low":183.5,"close":184.44,"volume":53159900,"date":"2020-02-11T00:00:00.000Z"},{"open":185.58,"high":185.85,"low":181.85,"close":184.71,"volume":47062900,"date":"2020-02-12T00:00:00.000Z"},{"open":183.08,"high":186.23,"low":182.87,"close":183.71,"volume":35295800,"date":"2020-02-13T00:00:00.000Z"},{"open":183.25,"high":185.41,"low":182.65,"close":185.35,"volume":23149500,"date":"2020-02-14T00:00:00.000Z"},{"open":185.61,"high":187.7,"low":185.5,"close":187.23,"volume":27792200,"date":"2020-02-18T00:00:00.000Z"},{"open":188.06,"high":188.18,"low":186.47,"close":187.28,"volume":29997500,"date":"2020-02-19T00:00:00.000Z"},{"open":186.95,"high":187.25,"low":181.1,"close":184.42,"volume":36862400,"date":"2020-02-20T00:00:00.000Z"},{"open":183.17,"high":183.5,"low":177.25,"close":178.59,"volume":48572600,"date":"2020-02-21T00:00:00.000Z"},{"open":167.77,"high":174.55,"low":163.23,"close":170.89,"volume":68311100,"date":"2020-02-24T00:00:00.000Z"},{"open":174.2,"high":174.84,"low":167.65,"close":168.07,"volume":68073300,"date":"2020-02-25T00:00:00.000Z"},{"open":169.71,"high":173.26,"low":168.21,"close":170.17,"volume":56206100,"date":"2020-02-26T00:00:00.000Z"},{"open":163.32,"high":167.03,"low":157.98,"close":158.18,"volume":93033600,"date":"2020-02-27T00:00:00.000Z"},{"open":152.41,"high":163.71,"low":152,"close":162.01,"volume":97073600,"date":"2020-02-28T00:00:00.000Z"},{"open":165.31,"high":172.92,"low":162.31,"close":172.79,"volume":71030800,"date":"2020-03-02T00:00:00.000Z"},{"open":173.8,"high":175,"low":162.26,"close":164.51,"volume":71677000,"date":"2020-03-03T00:00:00.000Z"},{"open":168.49,"high":170.7,"low":165.62,"close":170.55,"volume":49814400,"date":"2020-03-04T00:00:00.000Z"},{"open":166.05,"high":170.87,"low":165.69,"close":166.27,"volume":47817300,"date":"2020-03-05T00:00:00.000Z"},{"open":162.61,"high":163.11,"low":156,"close":161.57,"volume":72821100,"date":"2020-03-06T00:00:00.000Z"},{"open":151,"high":157.75,"low":150,"close":150.62,"volume":70419300,"date":"2020-03-09T00:00:00.000Z"},{"open":158.16,"high":161.03,"low":152.58,"close":160.92,"volume":65354400,"date":"2020-03-10T00:00:00.000Z"},{"open":157.13,"high":157.7,"low":151.15,"close":153.63,"volume":56371600,"date":"2020-03-11T00:00:00.000Z"},{"open":145.3,"high":153.47,"low":138.58,"close":139.06,"volume":93226400,"date":"2020-03-12T00:00:00.000Z"},{"open":147.5,"high":161.91,"low":140.73,"close":158.83,"volume":92727400,"date":"2020-03-13T00:00:00.000Z"},{"open":140,"high":149.35,"low":135,"close":135.42,"volume":87905900,"date":"2020-03-16T00:00:00.000Z"},{"open":140,"high":147.5,"low":135,"close":146.57,"volume":81059800,"date":"2020-03-17T00:00:00.000Z"},{"open":138,"high":146,"low":135.02,"close":140.4,"volume":81593200,"date":"2020-03-18T00:00:00.000Z"},{"open":142.77,"high":150.15,"low":139,"close":142.71,"volume":85922700,"date":"2020-03-19T00:00:00.000Z"},{"open":146,"high":147.1,"low":135.86,"close":137.35,"volume":84866200,"date":"2020-03-20T00:00:00.000Z"},{"open":137.01,"high":140.57,"low":132.52,"close":135.98,"volume":78975200,"date":"2020-03-23T00:00:00.000Z"},{"open":143.75,"high":149.6,"low":141.27,"close":148.34,"volume":82516700,"date":"2020-03-24T00:00:00.000Z"},{"open":148.91,"high":154.33,"low":144.44,"close":146.92,"volume":75638200,"date":"2020-03-25T00:00:00.000Z"},{"open":148.4,"high":156.66,"low":148.37,"close":156.11,"volume":64568100,"date":"2020-03-26T00:00:00.000Z"},{"open":151.75,"high":154.89,"low":149.2,"close":149.7,"volume":57042300,"date":"2020-03-27T00:00:00.000Z"},{"open":152.44,"high":160.6,"low":150.01,"close":160.23,"volume":63420300,"date":"2020-03-30T00:00:00.000Z"},{"open":159.4,"high":164.78,"low":156.56,"close":157.71,"volume":77927200,"date":"2020-03-31T00:00:00.000Z"},{"open":153,"high":157.75,"low":150.82,"close":152.11,"volume":57969900,"date":"2020-04-01T00:00:00.000Z"},{"open":151.86,"high":155.48,"low":150.36,"close":155.26,"volume":49630700,"date":"2020-04-02T00:00:00.000Z"},{"open":155.1,"high":157.38,"low":152.19,"close":153.83,"volume":41243300,"date":"2020-04-03T00:00:00.000Z"},{"open":160.32,"high":166.5,"low":157.58,"close":165.27,"volume":67111700,"date":"2020-04-06T00:00:00.000Z"},{"open":169.59,"high":170,"low":163.26,"close":163.49,"volume":62769000,"date":"2020-04-07T00:00:00.000Z"},{"open":165.67,"high":166.67,"low":163.5,"close":165.13,"volume":48318200,"date":"2020-04-08T00:00:00.000Z"},{"open":166.36,"high":167.37,"low":163.33,"close":165.14,"volume":51431800,"date":"2020-04-09T00:00:00.000Z"},{"open":164.35,"high":165.57,"low":162.3,"close":165.51,"volume":41905300,"date":"2020-04-13T00:00:00.000Z"},{"open":169,"high":173.75,"low":168,"close":173.7,"volume":52874300,"date":"2020-04-14T00:00:00.000Z"},{"open":171.2,"high":173.57,"low":169.24,"close":171.88,"volume":40940800,"date":"2020-04-15T00:00:00.000Z"},{"open":174.3,"high":177.28,"low":172.9,"close":177.04,"volume":50479600,"date":"2020-04-16T00:00:00.000Z"},{"open":179.5,"high":180,"low":175.87,"close":178.6,"volume":52765600,"date":"2020-04-17T00:00:00.000Z"},{"open":176.63,"high":178.75,"low":174.99,"close":175.06,"volume":36669600,"date":"2020-04-20T00:00:00.000Z"},{"open":173.5,"high":173.67,"low":166.11,"close":167.82,"volume":56203700,"date":"2020-04-21T00:00:00.000Z"},{"open":171.39,"high":174,"low":170.82,"close":173.52,"volume":34651600,"date":"2020-04-22T00:00:00.000Z"},{"open":174.11,"high":175.06,"low":170.91,"close":171.42,"volume":32790800,"date":"2020-04-23T00:00:00.000Z"},{"open":172.06,"high":174.56,"low":170.71,"close":174.55,"volume":34305300,"date":"2020-04-24T00:00:00.000Z"},{"open":176.59,"high":176.9,"low":173.3,"close":174.05,"volume":33194400,"date":"2020-04-27T00:00:00.000Z"},{"open":175.59,"high":175.67,"low":169.39,"close":169.81,"volume":34392700,"date":"2020-04-28T00:00:00.000Z"},{"open":173.22,"high":177.68,"low":171.88,"close":177.43,"volume":51286600,"date":"2020-04-29T00:00:00.000Z"},{"open":180,"high":180.4,"low":176.23,"close":179.21,"volume":53661300,"date":"2020-04-30T00:00:00.000Z"},{"open":175.8,"high":178.64,"low":174.01,"close":174.57,"volume":39370500,"date":"2020-05-01T00:00:00.000Z"},{"open":174.49,"high":179,"low":173.8,"close":178.84,"volume":30372900,"date":"2020-05-04T00:00:00.000Z"},{"open":180.62,"high":183.65,"low":179.9,"close":180.76,"volume":36839200,"date":"2020-05-05T00:00:00.000Z"},{"open":182.08,"high":184.2,"low":181.63,"close":182.54,"volume":32139300,"date":"2020-05-06T00:00:00.000Z"},{"open":184.17,"high":184.55,"low":182.58,"close":183.6,"volume":28316000,"date":"2020-05-07T00:00:00.000Z"},{"open":184.98,"high":185,"low":183.36,"close":184.68,"volume":30912600,"date":"2020-05-08T00:00:00.000Z"},{"open":183.15,"high":187.51,"low":182.85,"close":186.74,"volume":30892700,"date":"2020-05-11T00:00:00.000Z"},{"open":186.8,"high":187.04,"low":182.3,"close":182.51,"volume":32038200,"date":"2020-05-12T00:00:00.000Z"},{"open":182.55,"high":184.05,"low":176.54,"close":179.75,"volume":44711500,"date":"2020-05-13T00:00:00.000Z"},{"open":177.54,"high":180.69,"low":175.68,"close":180.53,"volume":41873900,"date":"2020-05-14T00:00:00.000Z"},{"open":179.06,"high":187.06,"low":177,"close":183.16,"volume":46610400,"date":"2020-05-15T00:00:00.000Z"},{"open":185.75,"high":186.2,"low":183.96,"close":184.91,"volume":35306600,"date":"2020-05-18T00:00:00.000Z"},{"open":185.03,"high":186.6,"low":183.49,"close":183.63,"volume":26799100,"date":"2020-05-19T00:00:00.000Z"},{"open":184.81,"high":185.85,"low":183.94,"close":185.66,"volume":31261300,"date":"2020-05-20T00:00:00.000Z"},{"open":185.4,"high":186.67,"low":183.29,"close":183.43,"volume":29119500,"date":"2020-05-21T00:00:00.000Z"},{"open":183.19,"high":184.46,"low":182.54,"close":183.51,"volume":20826900,"date":"2020-05-22T00:00:00.000Z"},{"open":186.34,"high":186.5,"low":181.1,"close":181.57,"volume":36073600,"date":"2020-05-26T00:00:00.000Z"},{"open":180.2,"high":181.99,"low":176.6,"close":181.81,"volume":39517100,"date":"2020-05-27T00:00:00.000Z"},{"open":180.74,"high":184.15,"low":180.38,"close":181.4,"volume":33810200,"date":"2020-05-28T00:00:00.000Z"},{"open":182.73,"high":184.27,"low":180.41,"close":183.25,"volume":42146700,"date":"2020-05-29T00:00:00.000Z"},{"open":182.54,"high":183,"low":181.46,"close":182.83,"volume":22622400,"date":"2020-06-01T00:00:00.000Z"},{"open":184.25,"high":185,"low":181.35,"close":184.91,"volume":30794600,"date":"2020-06-02T00:00:00.000Z"},{"open":184.82,"high":185.94,"low":183.58,"close":185.36,"volume":27311000,"date":"2020-06-03T00:00:00.000Z"},{"open":184.3,"high":185.84,"low":182.3,"close":182.92,"volume":28761800,"date":"2020-06-04T00:00:00.000Z"},{"open":182.62,"high":187.73,"low":182.01,"close":187.2,"volume":39893600,"date":"2020-06-05T00:00:00.000Z"},{"open":185.94,"high":188.55,"low":184.44,"close":188.36,"volume":33211600,"date":"2020-06-08T00:00:00.000Z"},{"open":188,"high":190.7,"low":187.26,"close":189.8,"volume":29783900,"date":"2020-06-09T00:00:00.000Z"},{"open":191.13,"high":198.52,"low":191.01,"close":196.84,"volume":43872300,"date":"2020-06-10T00:00:00.000Z"},{"open":193.13,"high":195.76,"low":186.07,"close":186.27,"volume":52854700,"date":"2020-06-11T00:00:00.000Z"},{"open":190.54,"high":191.72,"low":185.18,"close":187.74,"volume":43345700,"date":"2020-06-12T00:00:00.000Z"},{"open":184.58,"high":190.82,"low":184.01,"close":188.94,"volume":32770200,"date":"2020-06-15T00:00:00.000Z"},{"open":192.89,"high":195.58,"low":191.46,"close":193.57,"volume":42556700,"date":"2020-06-16T00:00:00.000Z"},{"open":195.03,"high":196.32,"low":193.69,"close":194.24,"volume":25655900,"date":"2020-06-17T00:00:00.000Z"},{"open":194,"high":196.49,"low":194,"close":196.32,"volume":23061600,"date":"2020-06-18T00:00:00.000Z"},{"open":198.59,"high":199.29,"low":194.37,"close":195.15,"volume":44441100,"date":"2020-06-19T00:00:00.000Z"},{"open":195.79,"high":200.76,"low":195.23,"close":200.57,"volume":32818900,"date":"2020-06-22T00:00:00.000Z"},{"open":202.09,"high":203.95,"low":201.43,"close":201.91,"volume":30917400,"date":"2020-06-23T00:00:00.000Z"},{"open":201.6,"high":203.25,"low":196.56,"close":197.84,"volume":36740600,"date":"2020-06-24T00:00:00.000Z"},{"open":197.8,"high":200.61,"low":195.47,"close":200.34,"volume":27803900,"date":"2020-06-25T00:00:00.000Z"},{"open":199.73,"high":199.89,"low":194.88,"close":196.33,"volume":54675800,"date":"2020-06-26T00:00:00.000Z"},{"open":195.78,"high":198.53,"low":193.55,"close":198.44,"volume":26701600,"date":"2020-06-29T00:00:00.000Z"},{"open":197.88,"high":204.4,"low":197.74,"close":203.51,"volume":34310300,"date":"2020-06-30T00:00:00.000Z"},{"open":203.14,"high":206.35,"low":201.77,"close":204.7,"volume":32061200,"date":"2020-07-01T00:00:00.000Z"},{"open":205.68,"high":208.02,"low":205,"close":206.26,"volume":29315800,"date":"2020-07-02T00:00:00.000Z"},{"open":208.83,"high":211.13,"low":208.09,"close":210.7,"volume":31897600,"date":"2020-07-06T00:00:00.000Z"},{"open":210.45,"high":214.67,"low":207.99,"close":208.25,"volume":33600700,"date":"2020-07-07T00:00:00.000Z"},{"open":210.07,"high":213.26,"low":208.69,"close":212.83,"volume":33600000,"date":"2020-07-08T00:00:00.000Z"},{"open":216.33,"high":216.38,"low":211.47,"close":214.32,"volume":33121700,"date":"2020-07-09T00:00:00.000Z"},{"open":213.62,"high":214.08,"low":211.08,"close":213.67,"volume":26177600,"date":"2020-07-10T00:00:00.000Z"},{"open":214.48,"high":215.8,"low":206.5,"close":207.07,"volume":38135600,"date":"2020-07-13T00:00:00.000Z"},{"open":206.13,"high":208.85,"low":202.03,"close":208.35,"volume":37591800,"date":"2020-07-14T00:00:00.000Z"},{"open":209.56,"high":211.33,"low":205.03,"close":208.04,"volume":32179400,"date":"2020-07-15T00:00:00.000Z"},{"open":205.4,"high":205.7,"low":202.31,"close":203.92,"volume":29940653,"date":"2020-07-16T00:00:00.000Z"},{"open":204.47,"high":205.04,"low":201.39,"close":202.88,"volume":31635281,"date":"2020-07-17T00:00:00.000Z"},{"open":205,"high":212.3,"low":203.01,"close":211.6,"volume":36884836,"date":"2020-07-20T00:00:00.000Z"},{"open":213.66,"high":213.94,"low":208.03,"close":208.75,"volume":38105777,"date":"2020-07-21T00:00:00.000Z"},{"open":209.2,"high":212.3,"low":208.39,"close":211.75,"volume":49604592,"date":"2020-07-22T00:00:00.000Z"},{"open":207.19,"high":210.92,"low":202.15,"close":202.54,"volume":67457035,"date":"2020-07-23T00:00:00.000Z"},{"open":200.42,"high":202.86,"low":197.51,"close":201.3,"volume":39826989,"date":"2020-07-24T00:00:00.000Z"},{"open":201.47,"high":203.97,"low":200.86,"close":203.85,"volume":30160867,"date":"2020-07-27T00:00:00.000Z"},{"open":203.61,"high":204.7,"low":201.74,"close":202.02,"volume":23251388,"date":"2020-07-28T00:00:00.000Z"},{"open":202.5,"high":204.65,"low":202.01,"close":204.06,"volume":19632602,"date":"2020-07-29T00:00:00.000Z"},{"open":201,"high":204.46,"low":199.57,"close":203.9,"volume":25079596,"date":"2020-07-30T00:00:00.000Z"},{"open":204.4,"high":205.1,"low":199.01,"close":205.01,"volume":51247969,"date":"2020-07-31T00:00:00.000Z"},{"open":211.52,"high":217.64,"low":210.44,"close":216.54,"volume":78983009,"date":"2020-08-03T00:00:00.000Z"},{"open":214.17,"high":214.77,"low":210.31,"close":213.29,"volume":49280056,"date":"2020-08-04T00:00:00.000Z"},{"open":214.9,"high":215,"low":211.57,"close":212.94,"volume":28858621,"date":"2020-08-05T00:00:00.000Z"},{"open":212.34,"high":216.37,"low":211.55,"close":216.35,"volume":32656843,"date":"2020-08-06T00:00:00.000Z"},{"open":214.85,"high":215.7,"low":210.93,"close":212.48,"volume":27820421,"date":"2020-08-07T00:00:00.000Z"},{"open":211.67,"high":211.88,"low":206.35,"close":208.25,"volume":36716462,"date":"2020-08-10T00:00:00.000Z"},{"open":207.155,"high":207.65,"low":203.14,"close":203.38,"volume":36446106,"date":"2020-08-11T00:00:00.000Z"},{"open":205.29,"high":210.28,"low":204.75,"close":209.19,"volume":28041364,"date":"2020-08-12T00:00:00.000Z"},{"open":209.44,"high":211.35,"low":208.15,"close":208.7,"volume":22588390,"date":"2020-08-13T00:00:00.000Z"},{"open":208.76,"high":209.59,"low":207.51,"close":208.9,"volume":17958936,"date":"2020-08-14T00:00:00.000Z"},{"open":209.6,"high":211.187,"low":208.915,"close":210.28,"volume":20184757,"date":"2020-08-17T00:00:00.000Z"},{"open":210.53,"high":212.36,"low":209.21,"close":211.49,"volume":21336167,"date":"2020-08-18T00:00:00.000Z"},{"open":211.49,"high":212.1,"low":209.25,"close":209.7,"volume":27627561,"date":"2020-08-19T00:00:00.000Z"},{"open":209.54,"high":215,"low":208.91,"close":214.58,"volume":26981478,"date":"2020-08-20T00:00:00.000Z"},{"open":213.86,"high":216.25,"low":212.85,"close":213.02,"volume":36249319,"date":"2020-08-21T00:00:00.000Z"},{"open":214.79,"high":215.52,"low":212.43,"close":213.69,"volume":25460147,"date":"2020-08-24T00:00:00.000Z"},{"open":213.1,"high":216.61,"low":213.1,"close":216.47,"volume":23043696,"date":"2020-08-25T00:00:00.000Z"},{"open":217.88,"high":222.09,"low":217.36,"close":221.15,"volume":39600828,"date":"2020-08-26T00:00:00.000Z"},{"open":222.89,"high":231.15,"low":219.4,"close":226.58,"volume":57602195,"date":"2020-08-27T00:00:00.000Z"},{"open":228.18,"high":230.644,"low":226.58,"close":228.91,"volume":26292896,"date":"2020-08-28T00:00:00.000Z"},{"open":227,"high":228.7,"low":224.31,"close":225.53,"volume":28774156,"date":"2020-08-31T00:00:00.000Z"},{"open":225.51,"high":227.45,"low":224.43,"close":227.27,"volume":25790360,"date":"2020-09-01T00:00:00.000Z"},{"open":227.97,"high":232.86,"low":227.35,"close":231.65,"volume":34080839,"date":"2020-09-02T00:00:00.000Z"},{"open":229.27,"high":229.31,"low":214.96,"close":217.3,"volume":58400288,"date":"2020-09-03T00:00:00.000Z"},{"open":215.1,"high":218.36,"low":205.19,"close":214.25,"volume":59664072,"date":"2020-09-04T00:00:00.000Z"},{"open":206.5,"high":210.03,"low":202.2,"close":202.66,"volume":52924330,"date":"2020-09-08T00:00:00.000Z"},{"open":207.6,"high":214.84,"low":206.7,"close":211.29,"volume":45678986,"date":"2020-09-09T00:00:00.000Z"},{"open":213.4,"high":214.74,"low":204.11,"close":205.37,"volume":35461514,"date":"2020-09-10T00:00:00.000Z"},{"open":207.2,"high":208.63,"low":201.24,"close":204.03,"volume":33620073,"date":"2020-09-11T00:00:00.000Z"},{"open":204.24,"high":209.2,"low":204.03,"close":205.41,"volume":30375658,"date":"2020-09-14T00:00:00.000Z"},{"open":208.42,"high":209.78,"low":206.93,"close":208.78,"volume":21823942,"date":"2020-09-15T00:00:00.000Z"},{"open":210.62,"high":210.65,"low":204.64,"close":205.05,"volume":26372464,"date":"2020-09-16T00:00:00.000Z"},{"open":200.05,"high":204.33,"low":199.96,"close":202.91,"volume":34011257,"date":"2020-09-17T00:00:00.000Z"},{"open":202.8,"high":203.65,"low":196.25,"close":200.39,"volume":55225326,"date":"2020-09-18T00:00:00.000Z"},{"open":197.19,"high":202.71,"low":196.38,"close":202.54,"volume":39839657,"date":"2020-09-21T00:00:00.000Z"},{"open":205.06,"high":208.1,"low":202.075,"close":207.42,"volume":33517065,"date":"2020-09-22T00:00:00.000Z"},{"open":207.9,"high":208.1,"low":200.03,"close":200.59,"volume":30803780,"date":"2020-09-23T00:00:00.000Z"},{"open":199.85,"high":205.57,"low":199.2,"close":203.19,"volume":31202493,"date":"2020-09-24T00:00:00.000Z"},{"open":203.55,"high":209.04,"low":202.54,"close":207.82,"volume":29437312,"date":"2020-09-25T00:00:00.000Z"},{"open":210.88,"high":212.57,"low":208.06,"close":209.44,"volume":32004936,"date":"2020-09-28T00:00:00.000Z"},{"open":209.35,"high":210.07,"low":206.81,"close":207.26,"volume":24464472,"date":"2020-09-29T00:00:00.000Z"},{"open":207.73,"high":211.98,"low":206.54,"close":210.33,"volume":33829088,"date":"2020-09-30T00:00:00.000Z"},{"open":213.49,"high":213.99,"low":211.32,"close":212.46,"volume":27158418,"date":"2020-10-01T00:00:00.000Z"},{"open":208,"high":210.99,"low":205.54,"close":206.19,"volume":33154781,"date":"2020-10-02T00:00:00.000Z"},{"open":207.22,"high":210.41,"low":206.98,"close":210.38,"volume":21331561,"date":"2020-10-05T00:00:00.000Z"},{"open":208.82,"high":210.18,"low":204.82,"close":205.91,"volume":28554261,"date":"2020-10-06T00:00:00.000Z"},{"open":207.06,"high":210.11,"low":206.72,"close":209.83,"volume":25681054,"date":"2020-10-07T00:00:00.000Z"},{"open":210.51,"high":211.19,"low":208.32,"close":210.58,"volume":19925837,"date":"2020-10-08T00:00:00.000Z"},{"open":211.23,"high":215.86,"low":211.23,"close":215.81,"volume":26458047,"date":"2020-10-09T00:00:00.000Z"},{"open":218.79,"high":223.86,"low":216.81,"close":221.4,"volume":40461368,"date":"2020-10-12T00:00:00.000Z"},{"open":222.72,"high":225.21,"low":220.43,"close":222.86,"volume":28950843,"date":"2020-10-13T00:00:00.000Z"},{"open":223,"high":224.22,"low":219.13,"close":220.86,"volume":23451713,"date":"2020-10-14T00:00:00.000Z"},{"open":217.1,"high":220.36,"low":216.01,"close":219.66,"volume":22733064,"date":"2020-10-15T00:00:00.000Z"},{"open":220.15,"high":222.29,"low":219.32,"close":219.66,"volume":26057882,"date":"2020-10-16T00:00:00.000Z"},{"open":220.415,"high":222.3,"low":213.72,"close":214.22,"volume":27625841,"date":"2020-10-19T00:00:00.000Z"},{"open":215.8,"high":217.37,"low":213.09,"close":214.65,"volume":22753511,"date":"2020-10-20T00:00:00.000Z"},{"open":213.12,"high":216.92,"low":213.12,"close":214.8,"volume":22724906,"date":"2020-10-21T00:00:00.000Z"},{"open":213.93,"high":216.055,"low":211.7,"close":214.89,"volume":20127417,"date":"2020-10-22T00:00:00.000Z"},{"open":215.03,"high":216.28,"low":213.16,"close":216.23,"volume":17473784,"date":"2020-10-23T00:00:00.000Z"},{"open":213.85,"high":216.34,"low":208.1,"close":210.08,"volume":34921708,"date":"2020-10-26T00:00:00.000Z"},{"open":211.59,"high":214.67,"low":210.329,"close":213.25,"volume":29009357,"date":"2020-10-27T00:00:00.000Z"},{"open":207.67,"high":208.84,"low":202.1,"close":202.68,"volume":48785313,"date":"2020-10-28T00:00:00.000Z"},{"open":204.07,"high":207.36,"low":203.37,"close":204.72,"volume":29112718,"date":"2020-10-29T00:00:00.000Z"},{"open":203.5,"high":204.29,"low":199.62,"close":202.47,"volume":35013215,"date":"2020-10-30T00:00:00.000Z"},{"open":204.29,"high":205.28,"low":200.12,"close":202.33,"volume":28207614,"date":"2020-11-02T00:00:00.000Z"},{"open":203.89,"high":208.12,"low":203.12,"close":206.43,"volume":25455230,"date":"2020-11-03T00:00:00.000Z"},{"open":214.02,"high":218.32,"low":212.419,"close":216.39,"volume":39632916,"date":"2020-11-04T00:00:00.000Z"},{"open":222.04,"high":224.12,"low":221.15,"close":223.29,"volume":33693699,"date":"2020-11-05T00:00:00.000Z"},{"open":222.26,"high":224.36,"low":218.03,"close":223.72,"volume":23992044,"date":"2020-11-06T00:00:00.000Z"},{"open":224.435,"high":228.12,"low":217.88,"close":218.39,"volume":37117298,"date":"2020-11-09T00:00:00.000Z"},{"open":214.5,"high":216.5,"low":209.72,"close":211.01,"volume":42156116,"date":"2020-11-10T00:00:00.000Z"},{"open":212.39,"high":218.04,"low":212.2,"close":216.55,"volume":28315971,"date":"2020-11-11T00:00:00.000Z"},{"open":217.21,"high":219.11,"low":214.46,"close":215.44,"volume":20782433,"date":"2020-11-12T00:00:00.000Z"},{"open":216.36,"high":217.42,"low":214.16,"close":216.51,"volume":17857132,"date":"2020-11-13T00:00:00.000Z"},{"open":214.87,"high":217.74,"low":214.52,"close":217.23,"volume":21958491,"date":"2020-11-16T00:00:00.000Z"},{"open":216.1,"high":217.68,"low":214.08,"close":214.46,"volume":22784482,"date":"2020-11-17T00:00:00.000Z"},{"open":213.65,"high":215.17,"low":210.93,"close":211.08,"volume":26558713,"date":"2020-11-18T00:00:00.000Z"},{"open":211.38,"high":213.03,"low":209.93,"close":212.42,"volume":23074565,"date":"2020-11-19T00:00:00.000Z"},{"open":212.2,"high":213.285,"low":210,"close":210.39,"volume":21278401,"date":"2020-11-20T00:00:00.000Z"},{"open":210.95,"high":212.29,"low":208.16,"close":210.11,"volume":22476841,"date":"2020-11-23T00:00:00.000Z"},{"open":209.59,"high":214.25,"low":208.86,"close":213.86,"volume":32640137,"date":"2020-11-24T00:00:00.000Z"},{"open":215.11,"high":215.29,"low":212.46,"close":213.87,"volume":19148101,"date":"2020-11-25T00:00:00.000Z"},{"open":214.85,"high":216.27,"low":214.04,"close":215.23,"volume":13650701,"date":"2020-11-27T00:00:00.000Z"},{"open":214.1,"high":214.76,"low":210.835,"close":214.07,"volume":24555763,"date":"2020-11-30T00:00:00.000Z"},{"open":214.51,"high":217.32,"low":213.35,"close":216.21,"volume":27847192,"date":"2020-12-01T00:00:00.000Z"},{"open":214.88,"high":215.47,"low":212.8,"close":215.37,"volume":21319547,"date":"2020-12-02T00:00:00.000Z"},{"open":214.61,"high":216.3757,"low":213.65,"close":214.24,"volume":22131257,"date":"2020-12-03T00:00:00.000Z"},{"open":214.22,"high":215.38,"low":213.18,"close":214.36,"volume":22528762,"date":"2020-12-04T00:00:00.000Z"},{"open":214.37,"high":215.54,"low":212.99,"close":214.29,"volume":20258335,"date":"2020-12-07T00:00:00.000Z"},{"open":213.97,"high":216.95,"low":212.89,"close":216.01,"volume":20381350,"date":"2020-12-08T00:00:00.000Z"},{"open":215.16,"high":215.225,"low":211.214,"close":211.8,"volume":29699104,"date":"2020-12-09T00:00:00.000Z"},{"open":211.77,"high":213.08,"low":210.36,"close":210.52,"volume":24435887,"date":"2020-12-10T00:00:00.000Z"},{"open":210.05,"high":213.32,"low":209.11,"close":213.26,"volume":28239849,"date":"2020-12-11T00:00:00.000Z"},{"open":213.1,"high":216.21,"low":212.88,"close":214.2,"volume":26953968,"date":"2020-12-14T00:00:00.000Z"},{"open":215.165,"high":215.42,"low":212.24,"close":214.13,"volume":23933303,"date":"2020-12-15T00:00:00.000Z"},{"open":214.75,"high":220.11,"low":214.72,"close":219.28,"volume":32367920,"date":"2020-12-16T00:00:00.000Z"},{"open":219.87,"high":220.89,"low":217.92,"close":219.42,"volume":28534250,"date":"2020-12-17T00:00:00.000Z"},{"open":218.59,"high":219.69,"low":216.02,"close":218.59,"volume":56434452,"date":"2020-12-18T00:00:00.000Z"},{"open":217.55,"high":224,"low":217.2801,"close":222.59,"volume":32887631,"date":"2020-12-21T00:00:00.000Z"},{"open":222.69,"high":225.63,"low":221.85,"close":223.94,"volume":21581864,"date":"2020-12-22T00:00:00.000Z"},{"open":223.11,"high":223.5589,"low":220.8,"close":221.02,"volume":17656084,"date":"2020-12-23T00:00:00.000Z"},{"open":221.42,"high":223.61,"low":221.2,"close":222.75,"volume":10335777,"date":"2020-12-24T00:00:00.000Z"},{"open":224.45,"high":226.03,"low":223.02,"close":224.96,"volume":17386805,"date":"2020-12-28T00:00:00.000Z"},{"open":226.31,"high":227.18,"low":223.58,"close":224.15,"volume":16840903,"date":"2020-12-29T00:00:00.000Z"},{"open":225.23,"high":225.63,"low":221.47,"close":221.68,"volume":19156569,"date":"2020-12-30T00:00:00.000Z"},{"open":221.7,"high":223,"low":219.68,"close":222.42,"volume":19810269,"date":"2020-12-31T00:00:00.000Z"},{"open":222.53,"high":223,"low":214.81,"close":217.69,"volume":33201718,"date":"2021-01-04T00:00:00.000Z"},{"open":217.26,"high":218.52,"low":215.7,"close":217.9,"volume":21018879,"date":"2021-01-05T00:00:00.000Z"},{"open":212.17,"high":216.4899,"low":211.94,"close":212.25,"volume":33700498,"date":"2021-01-06T00:00:00.000Z"},{"open":214.04,"high":219.34,"low":213.71,"close":218.29,"volume":24927801,"date":"2021-01-07T00:00:00.000Z"},{"open":218.68,"high":220.58,"low":217.0261,"close":219.62,"volume":21328808,"date":"2021-01-08T00:00:00.000Z"},{"open":218.47,"high":218.91,"low":216.73,"close":217.49,"volume":19674469,"date":"2021-01-11T00:00:00.000Z"},{"open":216.5,"high":217.1,"low":213.3202,"close":214.93,"volume":22125637,"date":"2021-01-12T00:00:00.000Z"},{"open":214.02,"high":216.76,"low":213.9266,"close":216.34,"volume":18672698,"date":"2021-01-13T00:00:00.000Z"},{"open":215.91,"high":217.46,"low":212.74,"close":213.02,"volume":27415037,"date":"2021-01-14T00:00:00.000Z"},{"open":213.52,"high":214.51,"low":212.03,"close":212.65,"volume":29075855,"date":"2021-01-15T00:00:00.000Z"},{"open":213.75,"high":216.98,"low":212.63,"close":216.44,"volume":24891094,"date":"2021-01-19T00:00:00.000Z"},{"open":217.7,"high":225.79,"low":217.2908,"close":224.34,"volume":35425729,"date":"2021-01-20T00:00:00.000Z"},{"open":224.7,"high":226.3,"low":222.42,"close":224.97,"volume":26733856,"date":"2021-01-21T00:00:00.000Z"},{"open":227.08,"high":230.07,"low":225.8,"close":225.95,"volume":28435870,"date":"2021-01-22T00:00:00.000Z"},{"open":229.12,"high":229.78,"low":224.22,"close":229.53,"volume":31193123,"date":"2021-01-25T00:00:00.000Z"},{"open":231.86,"high":234.18,"low":230.08,"close":232.33,"volume":39693293,"date":"2021-01-26T00:00:00.000Z"},{"open":238,"high":240.44,"low":230.14,"close":232.9,"volume":65752542,"date":"2021-01-27T00:00:00.000Z"},{"open":235.61,"high":242.64,"low":235.09,"close":238.93,"volume":43998446,"date":"2021-01-28T00:00:00.000Z"},{"open":235.99,"high":238.02,"low":231.35,"close":231.96,"volume":39177000,"date":"2021-01-29T00:00:00.000Z"},{"open":235.06,"high":242.5,"low":232.43,"close":239.65,"volume":31165863,"date":"2021-02-01T00:00:00.000Z"},{"open":241.3,"high":242.31,"low":238.69,"close":239.51,"volume":24532241,"date":"2021-02-02T00:00:00.000Z"},{"open":239.57,"high":245.09,"low":239.26,"close":243,"volume":26037546,"date":"2021-02-03T00:00:00.000Z"},{"open":242.66,"high":243.2399,"low":240.37,"close":242.01,"volume":23157752,"date":"2021-02-04T00:00:00.000Z"},{"open":242.23,"high":243.28,"low":240.42,"close":242.2,"volume":16477303,"date":"2021-02-05T00:00:00.000Z"},{"open":243.15,"high":243.68,"low":240.81,"close":242.47,"volume":17268412,"date":"2021-02-08T00:00:00.000Z"},{"open":241.87,"high":244.76,"low":241.38,"close":243.77,"volume":22007678,"date":"2021-02-09T00:00:00.000Z"},{"open":245,"high":245.92,"low":240.89,"close":242.82,"volume":20668970,"date":"2021-02-10T00:00:00.000Z"},{"open":244.78,"high":245.15,"low":242.15,"close":244.49,"volume":15064564,"date":"2021-02-11T00:00:00.000Z"},{"open":243.9332,"high":245.3,"low":242.73,"close":244.99,"volume":15229225,"date":"2021-02-12T00:00:00.000Z"},{"open":245.03,"high":246.13,"low":242.92,"close":243.7,"volume":22931394,"date":"2021-02-16T00:00:00.000Z"},{"open":241.32,"high":244.31,"low":240.94,"close":244.2,"volume":20411620,"date":"2021-02-17T00:00:00.000Z"},{"open":241.8,"high":243.93,"low":240.86,"close":243.79,"volume":16158117,"date":"2021-02-18T00:00:00.000Z"},{"open":243.75,"high":243.86,"low":240.18,"close":240.97,"volume":24325031,"date":"2021-02-19T00:00:00.000Z"},{"open":237.42,"high":237.93,"low":232.4,"close":234.51,"volume":33679280,"date":"2021-02-22T00:00:00.000Z"},{"open":230.325,"high":234.83,"low":228.73,"close":233.27,"volume":28862550,"date":"2021-02-23T00:00:00.000Z"},{"open":230.01,"high":235.2,"low":229,"close":234.55,"volume":24471200,"date":"2021-02-24T00:00:00.000Z"},{"open":232.08,"high":234.5852,"low":227.88,"close":228.99,"volume":37164686,"date":"2021-02-25T00:00:00.000Z"},{"open":231.525,"high":235.37,"low":229.54,"close":232.38,"volume":35299549,"date":"2021-02-26T00:00:00.000Z"},{"open":235.9,"high":237.47,"low":233.15,"close":236.94,"volume":23968638,"date":"2021-03-01T00:00:00.000Z"},{"open":237.01,"high":237.3,"low":233.45,"close":233.87,"volume":21656350,"date":"2021-03-02T00:00:00.000Z"},{"open":232.155,"high":233.5799,"low":227.26,"close":227.56,"volume":31814033,"date":"2021-03-03T00:00:00.000Z"},{"open":226.735,"high":232.49,"low":224.26,"close":226.73,"volume":42932750,"date":"2021-03-04T00:00:00.000Z"},{"open":229.5165,"high":233.27,"low":226.46,"close":231.6,"volume":40027999,"date":"2021-03-05T00:00:00.000Z"},{"open":231.37,"high":233.365,"low":227.13,"close":227.39,"volume":33563939,"date":"2021-03-08T00:00:00.000Z"},{"open":232.88,"high":235.3839,"low":231.67,"close":233.78,"volume":30637325,"date":"2021-03-09T00:00:00.000Z"},{"open":237,"high":237,"low":232.04,"close":232.42,"volume":28647723,"date":"2021-03-10T00:00:00.000Z"},{"open":234.96,"high":239.17,"low":234.31,"close":237.13,"volume":27244916,"date":"2021-03-11T00:00:00.000Z"},{"open":234.01,"high":235.82,"low":233.23,"close":235.75,"volume":20925971,"date":"2021-03-12T00:00:00.000Z"},{"open":234.96,"high":235.185,"low":231.81,"close":234.81,"volume":24392979,"date":"2021-03-15T00:00:00.000Z"},{"open":236.28,"high":240.055,"low":235.94,"close":237.71,"volume":26310507,"date":"2021-03-16T00:00:00.000Z"},{"open":236.15,"high":238.55,"low":233.23,"close":237.04,"volume":28496628,"date":"2021-03-17T00:00:00.000Z"},{"open":232.56,"high":234.19,"low":230.33,"close":230.72,"volume":34852107,"date":"2021-03-18T00:00:00.000Z"},{"open":231.02,"high":232.474,"low":229.3496,"close":230.35,"volume":40533944,"date":"2021-03-19T00:00:00.000Z"},{"open":230.27,"high":236.9,"low":230.14,"close":235.99,"volume":30127000,"date":"2021-03-22T00:00:00.000Z"},{"open":237.485,"high":241.05,"low":237.07,"close":237.58,"volume":31638189,"date":"2021-03-23T00:00:00.000Z"},{"open":237.845,"high":238,"low":235.32,"close":235.46,"volume":25619925,"date":"2021-03-24T00:00:00.000Z"},{"open":235.3,"high":236.94,"low":231.57,"close":232.34,"volume":34061753,"date":"2021-03-25T00:00:00.000Z"},{"open":231.55,"high":236.71,"low":231.55,"close":236.48,"volume":25479417,"date":"2021-03-26T00:00:00.000Z"},{"open":236.59,"high":236.8,"low":231.88,"close":235.24,"volume":25227312,"date":"2021-03-29T00:00:00.000Z"},{"open":233.525,"high":233.85,"low":231.1,"close":231.85,"volume":24792008,"date":"2021-03-30T00:00:00.000Z"},{"open":232.91,"high":239.1,"low":232.39,"close":235.77,"volume":43623470,"date":"2021-03-31T00:00:00.000Z"},{"open":238.47,"high":242.84,"low":238.0501,"close":242.35,"volume":30337979,"date":"2021-04-01T00:00:00.000Z"},{"open":242.76,"high":249.96,"low":242.7,"close":249.07,"volume":36910608,"date":"2021-04-05T00:00:00.000Z"},{"open":247.61,"high":249.4,"low":246.88,"close":247.86,"volume":22931849,"date":"2021-04-06T00:00:00.000Z"},{"open":247.81,"high":250.93,"low":247.19,"close":249.9,"volume":22719825,"date":"2021-04-07T00:00:00.000Z"},{"open":252.77,"high":254.139,"low":252,"close":253.25,"volume":23625197,"date":"2021-04-08T00:00:00.000Z"},{"open":252.87,"high":255.99,"low":252.44,"close":255.85,"volume":24326693,"date":"2021-04-09T00:00:00.000Z"},{"open":254.71,"high":257.67,"low":254.62,"close":255.91,"volume":27148538,"date":"2021-04-12T00:00:00.000Z"},{"open":257.2573,"high":259.19,"low":256.83,"close":258.49,"volume":23837426,"date":"2021-04-13T00:00:00.000Z"},{"open":257.475,"high":258.83,"low":255.16,"close":255.59,"volume":23070469,"date":"2021-04-14T00:00:00.000Z"},{"open":257.931,"high":259.93,"low":257.73,"close":259.5,"volume":25627375,"date":"2021-04-15T00:00:00.000Z"},{"open":259.47,"high":261,"low":257.6014,"close":260.74,"volume":24878582,"date":"2021-04-16T00:00:00.000Z"},{"open":260.19,"high":261.48,"low":257.821,"close":258.74,"volume":23209096,"date":"2021-04-19T00:00:00.000Z"},{"open":257.82,"high":260.2,"low":256.84,"close":258.26,"volume":19722875,"date":"2021-04-20T00:00:00.000Z"},{"open":258.94,"high":260.68,"low":257.25,"close":260.58,"volume":24030383,"date":"2021-04-21T00:00:00.000Z"},{"open":260.21,"high":261.78,"low":255.64,"close":257.17,"volume":25606083,"date":"2021-04-22T00:00:00.000Z"},{"open":257.88,"high":261.51,"low":257.27,"close":261.15,"volume":21499108,"date":"2021-04-23T00:00:00.000Z"},{"open":261.66,"high":262.435,"low":260.17,"close":261.55,"volume":19763346,"date":"2021-04-26T00:00:00.000Z"},{"open":261.585,"high":263.19,"low":260.12,"close":261.97,"volume":31013878,"date":"2021-04-27T00:00:00.000Z"},{"open":256.078,"high":256.5399,"low":252.95,"close":254.56,"volume":46902858,"date":"2021-04-28T00:00:00.000Z"},{"open":255.46,"high":256.1,"low":249,"close":252.51,"volume":40588827,"date":"2021-04-29T00:00:00.000Z"},{"open":249.74,"high":253.08,"low":249.6,"close":252.18,"volume":30944881,"date":"2021-04-30T00:00:00.000Z"},{"open":253.4,"high":254.35,"low":251.12,"close":251.86,"volume":19626568,"date":"2021-05-03T00:00:00.000Z"},{"open":250.97,"high":251.21,"low":245.76,"close":247.79,"volume":32756027,"date":"2021-05-04T00:00:00.000Z"},{"open":249.06,"high":249.5,"low":245.82,"close":246.47,"volume":21901273,"date":"2021-05-05T09:15:00.000Z"}]');

/***/ }),
/* 2 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
var FinUtil = /** @class */ (function () {
    function FinUtil() {
    }
    /**
     *
     * @description calc average
     * @param arr_
     * @returns
     */
    FinUtil.prototype.avg = function (arr_) {
        var sum = 0;
        var l = arr_.length;
        for (var i = l; i--;) {
            sum += arr_[i];
        }
        return sum / l;
    };
    FinUtil.prototype.op = function (op_, s_, m_) {
        switch (op_) {
            case '+': return s_ + m_;
            case '-': return s_ - m_;
            case '*': return s_ * m_;
            case '/': return m_ ? s_ / m_ : NaN;
        }
        return NaN;
    };
    FinUtil.prototype.arrOp = function (arr1_, arr2_, op_) {
        var result = [];
        var i;
        var len1 = arr1_.length;
        var len2;
        switch (this.getClass(arr2_)) {
            case 'Array':
                len2 = arr2_.length;
                for (i = 0; i < len1; i++) {
                    if (this.getClass(arr1_[i]) === 'Number' && this.getClass(arr2_[i]) === 'Number') {
                        result.push(this.op(op_, arr1_[i], arr2_[i]));
                    }
                    else {
                        result.push(NaN);
                    }
                }
                while (result.length < len2) {
                    result.push(NaN);
                }
                break;
            case 'Number':
                for (i = 0; i < len1; i++) {
                    if (this.getClass(arr1_[i]) === 'Number') {
                        result.push(this.op(op_, arr1_[i], arr2_));
                    }
                    else {
                        result.push(NaN);
                    }
                }
                break;
            default:
                throw Error('argument of arrOp() is not supported');
        }
        return result;
    };
    /**
     * @description calculate standard deviation
     * @param arr_
     * @param n_
     * @returns
     */
    FinUtil.prototype.sd = function (arr_, n_) {
        var avg = this.avg(arr_);
        var l = arr_.length;
        var sum = 0;
        for (var i = l; i--;) {
            sum += Math.pow(arr_[i] - avg, 2);
        }
        return Math.sqrt(sum / (n_ ? l - n_ : l));
    };
    /**
     *
     * @description Simple Moving Average
     * @param arr_
     * @param days_
     * @param weight_
     * @returns
     */
    FinUtil.prototype.sma = function (arr_, days_, weight_) {
        var result = [arr_[0]];
        for (var i = 1, l = arr_.length; i < l; i++) {
            result.push((weight_ * arr_[i] + (days_ - weight_) * result[i - 1]) / days_);
        }
        return result;
    };
    /**
     *
     * @description
     * @param arr_
     * @param n_
     * @returns
     */
    FinUtil.prototype.std = function (arr_, n_) {
        var result = [];
        for (var i = 0, s = void 0, l = arr_.length; i < l; i++) {
            s = i < n_ ? 0 : i - n_ + 1;
            result.push(this.sd(arr_.slice(s, i + 1), 1));
        }
        return result;
    };
    /**
     *
     * @description calc absolute deviation
     * @link https://baike.baidu.com/item/%E7%BB%9D%E5%AF%B9%E5%81%8F%E5%B7%AE/5805166
     * @param arr_
     * @returns
     */
    FinUtil.prototype.ad = function (arr_) {
        var avg = this.avg(arr_);
        var sum = 0;
        var l = arr_.length;
        for (var i = l; i--;) {
            sum += Math.abs(arr_[i] - avg);
        }
        return sum / l;
    };
    /**
     *
     * @param arr_
     * @param n_
     * @returns
     */
    FinUtil.prototype.avedev = function (arr_, n_) {
        var result = [];
        for (var i = 0, s = void 0, l = arr_.length; i < l; i++) {
            s = i < n_ ? 0 : i - n_ + 1;
            result.push(this.ad(arr_.slice(s, i + 1)));
        }
        return result;
    };
    /**
     *
     * @param arr_
     * @param n_
     * @returns
     */
    FinUtil.prototype.hhv = function (arr_, n_) {
        var result = [];
        var l = arr_.length;
        var max = Math.max.apply(Math, arr_);
        for (var i = 0, s = void 0; i < l; i++) {
            if (n_) {
                s = i < n_ ? 0 : i - n_ + 1;
                result.push(Math.max.apply(Math, arr_.slice(s, i + 1)));
            }
            else {
                result.push(max);
            }
        }
        return result;
    };
    /**
     *
     * @param arr_
     * @param n_
     * @returns
     */
    FinUtil.prototype.llv = function (arr_, n_) {
        var result = [];
        var l = arr_.length;
        var min = Math.min.apply(Math, arr_);
        for (var i = 0, s = void 0; i < l; i++) {
            if (n_) {
                s = i < n_ ? 0 : i - n_ + 1;
                result.push(Math.min.apply(Math, arr_.slice(s, i + 1)));
            }
            else {
                result.push(min);
            }
        }
        return result;
    };
    FinUtil.prototype.abs = function (o_) {
        /*
            switch (this.getClass(o_)) {
              default:throw new Error('argument of abs() is not supported');
              case 'Number':
                return Math.abs(o_);
    
              case 'Array':
            */
        var result = [];
        for (var i = 0, l = o_.length; i < l; i++) {
            result.push(Math.abs(o_[i]));
        }
        return result;
    };
    FinUtil.prototype.sum = function (arr_, n_) {
        var result = [];
        if (n_) {
            for (var i = 0, s = void 0, l = arr_.length; i < l; i++) {
                s = i < n_ ? 0 : i - n_ + 1;
                result.push(this.getArrSum(arr_.slice(s, i + 1)));
            }
        }
        else {
            var last = 0;
            for (var i = 0, l = arr_.length; i < l; i++) {
                last += arr_[i];
                result.push(last);
            }
        }
        return result;
    };
    FinUtil.prototype.max = function (arr1_, arr2_) {
        var result;
        var i;
        var l;
        switch (this.getClass(arr1_)) {
            case 'Array':
                switch (this.getClass(arr2_)) {
                    case 'Array':
                        result = [];
                        for (i = 0, l = arr1_.length; i < l; i++) {
                            result.push(Math.max(arr1_[i], arr2_[i]));
                        }
                        return result;
                    case 'Number':
                        result = [];
                        for (i = 0, l = arr1_.length; i < l; i++) {
                            result.push(Math.max(arr1_[i], arr2_));
                        }
                        return result;
                    default:
                        throw new Error('argument of max() is not supported');
                }
            case 'Number':
                switch (this.getClass(arr2_)) {
                    case 'Array':
                        result = [];
                        for (i = 0, l = arr2_.length; i < l; i++) {
                            result.push(Math.max(arr1_, arr2_[i]));
                        }
                        return result;
                    case 'Number':
                        return Math.max(arr1_, arr2_);
                    default:
                        throw new Error('argument of max() is not supported');
                }
            default:
                throw new Error('argument of max() is not supported');
        }
    };
    FinUtil.prototype.ref = function (arr_, n_) {
        var result = new Array(n_).fill(0);
        for (var i = n_, l = arr_.length; i < l; i++) {
            result.push(arr_[i - n_]);
        }
        return result;
    };
    /**
     *
     * @param arr_
     * @param prop_
     * @param f_
     * @returns
     */
    FinUtil.prototype.genArrByProp = function (arr_, prop_, f_) {
        if (prop_) {
            var result = [];
            for (var i = 0, l = arr_.length; i < l; i++) {
                result.push(f_ ? f_(arr_[i][prop_]) : arr_[i][prop_]);
            }
            return result;
        }
        return arr_;
    };
    FinUtil.prototype.getClass = function (o_) {
        // return typeof o_ === 'undefined' ? 'undefined' : o_ === null ? 'null' : o_.constructor.name;
        if (typeof o_ === 'undefined') {
            return 'undefined';
        }
        if (o_ === null) {
            return 'null';
        }
        return o_.constructor.name;
    };
    FinUtil.prototype.getArrSum = function (arr_) {
        var sum = 0;
        for (var i = arr_.length; i--;) {
            sum += arr_[i];
        }
        return sum;
    };
    return FinUtil;
}());
exports.default = new FinUtil();


/***/ }),
/* 3 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 *
 * @function MA
 * @description calculate moving average
 * @param {number[]} arr_ original data array
 * @param {number} days_ days
 * @param {boolean} calcAnyDays_ calculate or not based on not enough days
 * @returns {number[]} moving average array
 */
function default_1(arr_, days_, calcAnyDays_) {
    if (calcAnyDays_ === void 0) { calcAnyDays_ = true; }
    var result = [];
    for (var i = 0, sum = 0, ma = void 0, l = arr_.length; i < l; i++) {
        // add new incoming value to sum:
        arr_[i] && (sum += arr_[i]);
        if (i >= days_ - 1) {
            ma = sum / days_;
            // remove the oldest value from sum, to keep the total count
            arr_[i - days_ + 1] && (sum -= arr_[i - days_ + 1]);
        }
        else {
            // not enough days:
            ma = calcAnyDays_ ? sum / (i + 1) : 0;
        }
        result.push(ma);
    }
    return result;
}
exports.default = default_1;


/***/ }),
/* 4 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var FinUtil_1 = __importDefault(__webpack_require__(2));
var EMA_1 = __importDefault(__webpack_require__(5));
/**
 *
 * @description MACD, Moving Average Convergence and Divergence
  DIF = EMA(CLOSE, SHORT) - EMA(CLOSE, LONG)
  DEA = EMA(DIF, MID)
  MACD = (DIF - DEA) * 2
 * @param arr_
 * @param customData_ default to calculate based on close price with params:12,26,9
 * @returns
 */
function default_1(arr_, customData_) {
    if (customData_ === void 0) { customData_ = { prop: 'close', v0: 12, v1: 26, v2: 9 }; }
    var result = [];
    var prop = customData_.prop, SHORT = customData_.v0, LONG = customData_.v1, MID = customData_.v2;
    var arr = FinUtil_1.default.genArrByProp(arr_, prop);
    var difArr = FinUtil_1.default.arrOp(EMA_1.default(arr, SHORT), EMA_1.default(arr, LONG), '-');
    var deaArr = EMA_1.default(difArr, MID);
    var macdArr = FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(difArr, deaArr, '-'), 2, '*');
    for (var i = 0, l = arr.length; i < l; i++) {
        result[i] = {
            dif: difArr[i],
            dea: deaArr[i],
            bar: macdArr[i]
        };
    }
    return result;
}
exports.default = default_1;


/***/ }),
/* 5 */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 *
 * @function EMA
 * @description calculate exponential moving average
 * @param arr_ original data array
 * @param days_ days
 * @returns
 */
function default_1(arr_, days_) {
    if (typeof arr_ === 'number') {
        arr_ = [arr_];
    }
    var result = [arr_[0]];
    for (var i = 1, l = arr_.length; i < l; i++) {
        result.push((2 * arr_[i] + (days_ - 1) * result[i - 1]) / (days_ + 1));
    }
    return result;
}
exports.default = default_1;


/***/ }),
/* 6 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var FinUtil_1 = __importDefault(__webpack_require__(2));
function calc(arr_, n_, step_, max_) {
    var highArr = FinUtil_1.default.genArrByProp(arr_, 'high');
    var lowArr = FinUtil_1.default.genArrByProp(arr_, 'low');
    var len = arr_.length;
    var result = [];
    var stepArr = [];
    var extremeArr = [];
    var directionArr = [];
    function up(l) {
        if (l < len) {
            result[l] = Math.min.apply(Math, lowArr.slice(l - n_, l));
            directionArr[l] = 1;
            if (result[l] > lowArr[l]) {
                down(l + 1);
            }
            else {
                extremeArr[l] = Math.max.apply(null, highArr.slice(l - n_ + 1, l + 1));
                for (stepArr[l] = step_; len - 1 > l;) {
                    result[l + 1] = result[l] + stepArr[l] * (extremeArr[l] - result[l]) / 100;
                    directionArr[l + 1] = 1;
                    if (result[l + 1] > lowArr[l + 1]) {
                        return down(l + 2);
                    }
                    extremeArr[l + 1] = Math.max.apply(Math, highArr.slice(l - n_ + 2, l + 2));
                    if (highArr[l + 1] > extremeArr[l]) {
                        stepArr[l + 1] = stepArr[l] + step_;
                        stepArr[l + 1] > max_ && (stepArr[l + 1] = max_);
                    }
                    else {
                        stepArr[l + 1] = stepArr[l];
                    }
                    l++;
                }
            }
        }
    }
    function down(l) {
        if (l < len) {
            result[l] = Math.max.apply(Math, highArr.slice(l - n_, l));
            directionArr[l] = 0;
            if (result[l] < highArr[l]) {
                return up(l + 1);
            }
            extremeArr[l] = Math.min.apply(Math, lowArr.slice(l - n_ + 1, l + 1));
            for (stepArr[l] = step_; len - 1 > l;) {
                result[l + 1] = result[l] + stepArr[l] * (extremeArr[l] - result[l]) / 100;
                directionArr[l + 1] = 0;
                if (result[l + 1] < highArr[l + 1]) {
                    return up(l + 2);
                }
                extremeArr[l + 1] = Math.min.apply(Math, lowArr.slice(l - n_ + 2, l + 2));
                if (lowArr[l + 1] < extremeArr[l]) {
                    stepArr[l + 1] = stepArr[l] + step_;
                    stepArr[l + 1] > max_ && (stepArr[l + 1] = max_);
                }
                else {
                    stepArr[l + 1] = stepArr[l];
                }
                l++;
            }
        }
    }
    highArr[n_] > highArr[0] || lowArr[n_] > lowArr[0] ? up(n_) : down(n_);
    return {
        data: result,
        direction: directionArr
    };
}
/**
 *
 * @param arr_
 * @param n_
 * @param step_
 * @param max_
 * @returns
 */
function default_1(arr_, customData_) {
    if (customData_ === void 0) { customData_ = { v0: 1, v1: 1, v2: 1 }; }
    var result = [];
    var v0 = customData_.v0, v1 = customData_.v1, v2 = customData_.v2;
    var sarArr = calc(arr_, v0, v1, v2);
    for (var i = 0, l = arr_.length; i < l; i++) {
        result[i] = {
            ignore_minmax: sarArr.direction[i],
            sar: sarArr.data[i]
        };
    }
    return result;
}
exports.default = default_1;


/***/ }),
/* 7 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var FinUtil_1 = __importDefault(__webpack_require__(2));
var MA_1 = __importDefault(__webpack_require__(3));
/**
 *
 * @param arr_
 * @param customData_
 * @returns
 * @description
  BBIBOLL = (MA(CLOSE, 3) + MA(CLOSE, 6) + MA(CLOSE, 12) + MA(CLOSE, 24)) / 4
  UPR = BBIBOLL + M * STD(BBIBOLL, N)
  DWN = BBIBOLL - M * STD(BBIBOLL, N)
 */
function default_1(arr_, customData_) {
    if (customData_ === void 0) { customData_ = { prop: 'close', v0: 11, v1: 6 }; }
    var result = [];
    var prop = customData_.prop, N = customData_.v0, M = customData_.v1;
    var closeArr = FinUtil_1.default.genArrByProp(arr_, prop);
    // BBIBOLL:(MA(CLOSE,3)+MA(CLOSE,6)+MA(CLOSE,12)+MA(CLOSE,24))/4:
    var bbiArr = FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(MA_1.default(closeArr, 3), MA_1.default(closeArr, 6), '+'), MA_1.default(closeArr, 12), '+'), MA_1.default(closeArr, 24), '+'), 4, '/');
    // UPR:BBIBOLL+M*STD(BBIBOLL,N):
    var uprArr = FinUtil_1.default.arrOp(bbiArr, FinUtil_1.default.arrOp(FinUtil_1.default.std(bbiArr, N), M, '*'), '+');
    // DWN:BBIBOLL-M*STD(BBIBOLL,N):
    var dwnArr = FinUtil_1.default.arrOp(bbiArr, FinUtil_1.default.arrOp(FinUtil_1.default.std(bbiArr, N), M, '*'), '-');
    for (var i = 0, l = arr_.length; i < l; i++) {
        result[i] = {
            bbiboll: bbiArr[i],
            upr: uprArr[i],
            dwn: dwnArr[i]
        };
    }
    return result;
}
exports.default = default_1;


/***/ }),
/* 8 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var FinUtil_1 = __importDefault(__webpack_require__(2));
/**
 *
 * @param arr_
 * @param customData_
 * @returns
 * @description
  RSV = (CLOSE - LLV(LOW, P1)) / (HHV(HIGH, P1) - LLV(LOW, P1)) * 100
  K = SMA(RSV, P2, 1)
  D = SMA(K, P3, 1)
  J = 3 * K - 2 * D
 */
function default_1(arr_, customData_) {
    if (customData_ === void 0) { customData_ = { P1: 9, P2: 3, P3: 3 }; }
    var result = [];
    var P1 = customData_.P1, P2 = customData_.P2, P3 = customData_.P3;
    var closeArr = FinUtil_1.default.genArrByProp(arr_, 'close');
    var lowArr = FinUtil_1.default.genArrByProp(arr_, 'low');
    var highArr = FinUtil_1.default.genArrByProp(arr_, 'high');
    // RSV = (CLOSE - LLV(LOW, P1)) / (HHV(HIGH, P1) - LLV(LOW, P1)) * 100:
    var rsvArr = FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(closeArr, FinUtil_1.default.llv(lowArr, P1), '-'), FinUtil_1.default.arrOp(FinUtil_1.default.hhv(highArr, P1), FinUtil_1.default.llv(lowArr, P1), '-'), '/'), 100, '*');
    var kArr = FinUtil_1.default.sma(rsvArr, P2, 1);
    var dArr = FinUtil_1.default.sma(kArr, P3, 1);
    var jArr = FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(kArr, 3, '*'), FinUtil_1.default.arrOp(dArr, 2, '*'), '-');
    for (var i = 0, l = arr_.length; i < l; i++) {
        result[i] = {
            k: kArr[i],
            d: dArr[i],
            j: jArr[i]
        };
    }
    return result;
}
exports.default = default_1;


/***/ }),
/* 9 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var FinUtil_1 = __importDefault(__webpack_require__(2));
var EMA_1 = __importDefault(__webpack_require__(5));
/**
 *
 * @param arr_
 * @param customData_
 * @returns
 * @description
  MTR = EXPMEMA(MAX(MAX(HIGH - LOW, ABS(HIGH - REF(CLOSE, 1))), ABS(REF(CLOSE, 1) - LOW)), N)
  HD = HIGH - REF(HIGH, 1)
  LD = REF(LOW, 1) - LOW
  DMP = EXPMEMA(IF(HD > 0 && HD > LD, HD, 0), N)
  DMM = EXPMEMA(IF(LD > 0 && LD > HD, LD, 0), N)
  PDI = DMP * 100 / MTR
  MDI = DMM * 100 / MTR
  ADX = EXPMEMA(ABS(MDI - PDI) / (MDI + PDI) * 100, M)
  ADXR = EXPMEMA(ADX, M)
 */
function default_1(arr_, customData_) {
    if (customData_ === void 0) { customData_ = { v0: 14, v1: 6 }; }
    var result = [];
    var N = customData_.v0, M = customData_.v1;
    var closeArr = FinUtil_1.default.genArrByProp(arr_, 'close');
    var highArr = FinUtil_1.default.genArrByProp(arr_, 'high');
    var lowArr = FinUtil_1.default.genArrByProp(arr_, 'low');
    // MTR=EXPMEMA(MAX(MAX(HIGH-LOW, ABS(HIGH-REF(CLOSE,1))), ABS(REF(CLOSE,1)-LOW)),N):
    var mtrArr = EMA_1.default(FinUtil_1.default.max(FinUtil_1.default.max(FinUtil_1.default.arrOp(highArr, lowArr, '-'), FinUtil_1.default.abs(FinUtil_1.default.arrOp(highArr, FinUtil_1.default.ref(closeArr, 1), '-'))), FinUtil_1.default.abs(FinUtil_1.default.arrOp(FinUtil_1.default.ref(closeArr, 1), lowArr, '-'))), N);
    var hdArr = FinUtil_1.default.arrOp(highArr, FinUtil_1.default.ref(highArr, 1), '-');
    var ldArr = FinUtil_1.default.arrOp(FinUtil_1.default.ref(lowArr, 1), lowArr, '-');
    var dmpArr = [];
    var dmmArr = [];
    for (var hd = void 0, ld = void 0, i = 0, l = hdArr.length; i < l; i++) {
        hd = hdArr[i];
        ld = ldArr[i];
        dmpArr.push(hd > 0 && hd > ld ? hd : 0);
        dmmArr.push(ld > 0 && ld > hd ? ld : 0);
    }
    dmpArr = EMA_1.default(dmpArr, N);
    dmmArr = EMA_1.default(dmmArr, N);
    var pdiArr = FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(dmpArr, 100, '*'), mtrArr, '/');
    var mdiArr = FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(dmmArr, 100, '*'), mtrArr, '/');
    // ADX=EXPMEMA(ABS(MDI-PDI)/(MDI+PDI)*100,M):
    var adxArr = EMA_1.default(FinUtil_1.default.arrOp(FinUtil_1.default.arrOp(FinUtil_1.default.abs(FinUtil_1.default.arrOp(mdiArr, pdiArr, '-')), FinUtil_1.default.arrOp(mdiArr, pdiArr, '+'), '/'), 100, '*'), M);
    var adxrArr = EMA_1.default(adxArr, M);
    for (var i = 0, l = arr_.length; i < l; i++) {
        result[i] = {
            pdi: pdiArr[i],
            mdi: mdiArr[i],
            adx: adxArr[i],
            adxr: adxrArr[i]
        };
    }
    return result;
}
exports.default = default_1;


/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _src_util_FinUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _src_MA__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var _src_MACD__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _src_MACD__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_src_MACD__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _src_SAR__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/* harmony import */ var _src_SAR__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_src_SAR__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _src_BBIBOLL__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7);
/* harmony import */ var _src_BBIBOLL__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_src_BBIBOLL__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _src_KDJ__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(8);
/* harmony import */ var _src_KDJ__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_src_KDJ__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _src_DMI__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9);
/* harmony import */ var _src_DMI__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_src_DMI__WEBPACK_IMPORTED_MODULE_7__);










function getContainer() {
  const root = document.getElementById('root');
  const container = document.createElement('p');
  root.appendChild(container);
  return container;
}
function showTestData() {
  console.log('original data:', _assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__);
  const container = getContainer();
  // container.innerHTML = ['original data:', JSON.stringify(testdata)].join('<br/>');
  container.innerHTML = "original data example (see console for more): <br/>[{'open':2, 'high': 4, 'low': 1, 'close':3, 'volume':999, 'date':'2019-10-11T00:00:00.000Z'}, ...]";
}
function test(name_, data_) {
  data_ = data_.reverse();// show newer datas first
  console.log(name_, data_);
  const container = getContainer();
  container.innerHTML = `${name_}:<br/>${JSON.stringify(data_.slice(0, 9))}...`;
}
window.addEventListener('load', () => {
  showTestData();
  testMA();
  test('MACD', _src_MACD__WEBPACK_IMPORTED_MODULE_3___default()(_assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__));
  test('SAR', _src_SAR__WEBPACK_IMPORTED_MODULE_4___default()(_assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__));
  test('BBIBOLL', _src_BBIBOLL__WEBPACK_IMPORTED_MODULE_5___default()(_assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__));
  test('KDJ', _src_KDJ__WEBPACK_IMPORTED_MODULE_6___default()(_assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__));
  test('DMI', _src_DMI__WEBPACK_IMPORTED_MODULE_7___default()(_assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__));
})

function testMA() {
  const prop = 'close';// or any other prop of the original data
  const data = _src_util_FinUtil__WEBPACK_IMPORTED_MODULE_1__.default.genArrByProp(_assets_testdata_json__WEBPACK_IMPORTED_MODULE_0__, prop);
  const a = (0,_src_MA__WEBPACK_IMPORTED_MODULE_2__.default)(data, 5);
  console.log('Moving Average(MA) based on', prop, a);
  const container = getContainer();
  container.innerHTML = `MA based on ${prop}:<br/>${a.slice(0, 9)}...`;
}
})();

/******/ })()
;